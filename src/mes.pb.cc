// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: mes.proto
// Protobuf C++ Version: 5.29.3

#include "mes.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace TestTask {
namespace Messages {

inline constexpr SlowResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        connected_client_count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SlowResponse::SlowResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SlowResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SlowResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SlowResponseDefaultTypeInternal() {}
  union {
    SlowResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SlowResponseDefaultTypeInternal _SlowResponse_default_instance_;

inline constexpr RequestForSlowResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        time_in_seconds_to_sleep_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RequestForSlowResponse::RequestForSlowResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestForSlowResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestForSlowResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestForSlowResponseDefaultTypeInternal() {}
  union {
    RequestForSlowResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestForSlowResponseDefaultTypeInternal _RequestForSlowResponse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR RequestForFastResponse::RequestForFastResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RequestForFastResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestForFastResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestForFastResponseDefaultTypeInternal() {}
  union {
    RequestForFastResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestForFastResponseDefaultTypeInternal _RequestForFastResponse_default_instance_;

inline constexpr FastResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        current_date_time_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR FastResponse::FastResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FastResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FastResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FastResponseDefaultTypeInternal() {}
  union {
    FastResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FastResponseDefaultTypeInternal _FastResponse_default_instance_;

inline constexpr WrapperMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        fast_response_{nullptr},
        slow_response_{nullptr},
        request_for_fast_response_{nullptr},
        request_for_slow_response_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR WrapperMessage::WrapperMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WrapperMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WrapperMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WrapperMessageDefaultTypeInternal() {}
  union {
    WrapperMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WrapperMessageDefaultTypeInternal _WrapperMessage_default_instance_;
}  // namespace Messages
}  // namespace TestTask
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_mes_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_mes_2eproto = nullptr;
const ::uint32_t
    TableStruct_mes_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::TestTask::Messages::WrapperMessage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::TestTask::Messages::WrapperMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::TestTask::Messages::WrapperMessage, _impl_.fast_response_),
        PROTOBUF_FIELD_OFFSET(::TestTask::Messages::WrapperMessage, _impl_.slow_response_),
        PROTOBUF_FIELD_OFFSET(::TestTask::Messages::WrapperMessage, _impl_.request_for_fast_response_),
        PROTOBUF_FIELD_OFFSET(::TestTask::Messages::WrapperMessage, _impl_.request_for_slow_response_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::TestTask::Messages::FastResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::TestTask::Messages::FastResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::TestTask::Messages::FastResponse, _impl_.current_date_time_),
        0,
        PROTOBUF_FIELD_OFFSET(::TestTask::Messages::SlowResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::TestTask::Messages::SlowResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::TestTask::Messages::SlowResponse, _impl_.connected_client_count_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::TestTask::Messages::RequestForFastResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::TestTask::Messages::RequestForSlowResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::TestTask::Messages::RequestForSlowResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::TestTask::Messages::RequestForSlowResponse, _impl_.time_in_seconds_to_sleep_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::TestTask::Messages::WrapperMessage)},
        {16, 25, -1, sizeof(::TestTask::Messages::FastResponse)},
        {26, 35, -1, sizeof(::TestTask::Messages::SlowResponse)},
        {36, -1, -1, sizeof(::TestTask::Messages::RequestForFastResponse)},
        {44, 53, -1, sizeof(::TestTask::Messages::RequestForSlowResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::TestTask::Messages::_WrapperMessage_default_instance_._instance,
    &::TestTask::Messages::_FastResponse_default_instance_._instance,
    &::TestTask::Messages::_SlowResponse_default_instance_._instance,
    &::TestTask::Messages::_RequestForFastResponse_default_instance_._instance,
    &::TestTask::Messages::_RequestForSlowResponse_default_instance_._instance,
};
const char descriptor_table_protodef_mes_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\tmes.proto\022\021TestTask.Messages\"\234\002\n\016Wrapp"
    "erMessage\0226\n\rfast_response\030\001 \001(\0132\037.TestT"
    "ask.Messages.FastResponse\0226\n\rslow_respon"
    "se\030\002 \001(\0132\037.TestTask.Messages.SlowRespons"
    "e\022L\n\031request_for_fast_response\030\003 \001(\0132).T"
    "estTask.Messages.RequestForFastResponse\022"
    "L\n\031request_for_slow_response\030\004 \001(\0132).Tes"
    "tTask.Messages.RequestForSlowResponse\")\n"
    "\014FastResponse\022\031\n\021current_date_time\030\001 \002(\t"
    "\".\n\014SlowResponse\022\036\n\026connected_client_cou"
    "nt\030\001 \002(\r\"\030\n\026RequestForFastResponse\":\n\026Re"
    "questForSlowResponse\022 \n\030time_in_seconds_"
    "to_sleep\030\001 \002(\r"
};
static ::absl::once_flag descriptor_table_mes_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_mes_2eproto = {
    false,
    false,
    494,
    descriptor_table_protodef_mes_2eproto,
    "mes.proto",
    &descriptor_table_mes_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_mes_2eproto::offsets,
    file_level_enum_descriptors_mes_2eproto,
    file_level_service_descriptors_mes_2eproto,
};
namespace TestTask {
namespace Messages {
// ===================================================================

class WrapperMessage::_Internal {
 public:
  using HasBits =
      decltype(std::declval<WrapperMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WrapperMessage, _impl_._has_bits_);
};

WrapperMessage::WrapperMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TestTask.Messages.WrapperMessage)
}
inline PROTOBUF_NDEBUG_INLINE WrapperMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::TestTask::Messages::WrapperMessage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

WrapperMessage::WrapperMessage(
    ::google::protobuf::Arena* arena,
    const WrapperMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WrapperMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.fast_response_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::TestTask::Messages::FastResponse>(
                              arena, *from._impl_.fast_response_)
                        : nullptr;
  _impl_.slow_response_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::TestTask::Messages::SlowResponse>(
                              arena, *from._impl_.slow_response_)
                        : nullptr;
  _impl_.request_for_fast_response_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::TestTask::Messages::RequestForFastResponse>(
                              arena, *from._impl_.request_for_fast_response_)
                        : nullptr;
  _impl_.request_for_slow_response_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::TestTask::Messages::RequestForSlowResponse>(
                              arena, *from._impl_.request_for_slow_response_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:TestTask.Messages.WrapperMessage)
}
inline PROTOBUF_NDEBUG_INLINE WrapperMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void WrapperMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fast_response_),
           0,
           offsetof(Impl_, request_for_slow_response_) -
               offsetof(Impl_, fast_response_) +
               sizeof(Impl_::request_for_slow_response_));
}
WrapperMessage::~WrapperMessage() {
  // @@protoc_insertion_point(destructor:TestTask.Messages.WrapperMessage)
  SharedDtor(*this);
}
inline void WrapperMessage::SharedDtor(MessageLite& self) {
  WrapperMessage& this_ = static_cast<WrapperMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.fast_response_;
  delete this_._impl_.slow_response_;
  delete this_._impl_.request_for_fast_response_;
  delete this_._impl_.request_for_slow_response_;
  this_._impl_.~Impl_();
}

inline void* WrapperMessage::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) WrapperMessage(arena);
}
constexpr auto WrapperMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(WrapperMessage),
                                            alignof(WrapperMessage));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull WrapperMessage::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_WrapperMessage_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        WrapperMessage::IsInitializedImpl,
        &WrapperMessage::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<WrapperMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &WrapperMessage::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<WrapperMessage>(), &WrapperMessage::ByteSizeLong,
            &WrapperMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(WrapperMessage, _impl_._cached_size_),
        false,
    },
    &WrapperMessage::kDescriptorMethods,
    &descriptor_table_mes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* WrapperMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> WrapperMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WrapperMessage, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TestTask::Messages::WrapperMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .TestTask.Messages.RequestForSlowResponse request_for_slow_response = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(WrapperMessage, _impl_.request_for_slow_response_)}},
    // optional .TestTask.Messages.FastResponse fast_response = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(WrapperMessage, _impl_.fast_response_)}},
    // optional .TestTask.Messages.SlowResponse slow_response = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(WrapperMessage, _impl_.slow_response_)}},
    // optional .TestTask.Messages.RequestForFastResponse request_for_fast_response = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(WrapperMessage, _impl_.request_for_fast_response_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .TestTask.Messages.FastResponse fast_response = 1;
    {PROTOBUF_FIELD_OFFSET(WrapperMessage, _impl_.fast_response_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .TestTask.Messages.SlowResponse slow_response = 2;
    {PROTOBUF_FIELD_OFFSET(WrapperMessage, _impl_.slow_response_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .TestTask.Messages.RequestForFastResponse request_for_fast_response = 3;
    {PROTOBUF_FIELD_OFFSET(WrapperMessage, _impl_.request_for_fast_response_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .TestTask.Messages.RequestForSlowResponse request_for_slow_response = 4;
    {PROTOBUF_FIELD_OFFSET(WrapperMessage, _impl_.request_for_slow_response_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::TestTask::Messages::FastResponse>()},
    {::_pbi::TcParser::GetTable<::TestTask::Messages::SlowResponse>()},
    {::_pbi::TcParser::GetTable<::TestTask::Messages::RequestForFastResponse>()},
    {::_pbi::TcParser::GetTable<::TestTask::Messages::RequestForSlowResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void WrapperMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:TestTask.Messages.WrapperMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.fast_response_ != nullptr);
      _impl_.fast_response_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.slow_response_ != nullptr);
      _impl_.slow_response_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.request_for_fast_response_ != nullptr);
      _impl_.request_for_fast_response_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.request_for_slow_response_ != nullptr);
      _impl_.request_for_slow_response_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WrapperMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WrapperMessage& this_ = static_cast<const WrapperMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WrapperMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WrapperMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:TestTask.Messages.WrapperMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .TestTask.Messages.FastResponse fast_response = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.fast_response_, this_._impl_.fast_response_->GetCachedSize(), target,
                stream);
          }

          // optional .TestTask.Messages.SlowResponse slow_response = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.slow_response_, this_._impl_.slow_response_->GetCachedSize(), target,
                stream);
          }

          // optional .TestTask.Messages.RequestForFastResponse request_for_fast_response = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.request_for_fast_response_, this_._impl_.request_for_fast_response_->GetCachedSize(), target,
                stream);
          }

          // optional .TestTask.Messages.RequestForSlowResponse request_for_slow_response = 4;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.request_for_slow_response_, this_._impl_.request_for_slow_response_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:TestTask.Messages.WrapperMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WrapperMessage::ByteSizeLong(const MessageLite& base) {
          const WrapperMessage& this_ = static_cast<const WrapperMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WrapperMessage::ByteSizeLong() const {
          const WrapperMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:TestTask.Messages.WrapperMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // optional .TestTask.Messages.FastResponse fast_response = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.fast_response_);
            }
            // optional .TestTask.Messages.SlowResponse slow_response = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.slow_response_);
            }
            // optional .TestTask.Messages.RequestForFastResponse request_for_fast_response = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_for_fast_response_);
            }
            // optional .TestTask.Messages.RequestForSlowResponse request_for_slow_response = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_for_slow_response_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WrapperMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WrapperMessage*>(&to_msg);
  auto& from = static_cast<const WrapperMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:TestTask.Messages.WrapperMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.fast_response_ != nullptr);
      if (_this->_impl_.fast_response_ == nullptr) {
        _this->_impl_.fast_response_ =
            ::google::protobuf::Message::CopyConstruct<::TestTask::Messages::FastResponse>(arena, *from._impl_.fast_response_);
      } else {
        _this->_impl_.fast_response_->MergeFrom(*from._impl_.fast_response_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.slow_response_ != nullptr);
      if (_this->_impl_.slow_response_ == nullptr) {
        _this->_impl_.slow_response_ =
            ::google::protobuf::Message::CopyConstruct<::TestTask::Messages::SlowResponse>(arena, *from._impl_.slow_response_);
      } else {
        _this->_impl_.slow_response_->MergeFrom(*from._impl_.slow_response_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.request_for_fast_response_ != nullptr);
      if (_this->_impl_.request_for_fast_response_ == nullptr) {
        _this->_impl_.request_for_fast_response_ =
            ::google::protobuf::Message::CopyConstruct<::TestTask::Messages::RequestForFastResponse>(arena, *from._impl_.request_for_fast_response_);
      } else {
        _this->_impl_.request_for_fast_response_->MergeFrom(*from._impl_.request_for_fast_response_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.request_for_slow_response_ != nullptr);
      if (_this->_impl_.request_for_slow_response_ == nullptr) {
        _this->_impl_.request_for_slow_response_ =
            ::google::protobuf::Message::CopyConstruct<::TestTask::Messages::RequestForSlowResponse>(arena, *from._impl_.request_for_slow_response_);
      } else {
        _this->_impl_.request_for_slow_response_->MergeFrom(*from._impl_.request_for_slow_response_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WrapperMessage::CopyFrom(const WrapperMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TestTask.Messages.WrapperMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WrapperMessage::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const WrapperMessage&>(msg);
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._impl_.fast_response_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._impl_.slow_response_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._impl_.request_for_slow_response_->IsInitialized()) return false;
  }
  return true;
}

void WrapperMessage::InternalSwap(WrapperMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WrapperMessage, _impl_.request_for_slow_response_)
      + sizeof(WrapperMessage::_impl_.request_for_slow_response_)
      - PROTOBUF_FIELD_OFFSET(WrapperMessage, _impl_.fast_response_)>(
          reinterpret_cast<char*>(&_impl_.fast_response_),
          reinterpret_cast<char*>(&other->_impl_.fast_response_));
}

::google::protobuf::Metadata WrapperMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FastResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<FastResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FastResponse, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

FastResponse::FastResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TestTask.Messages.FastResponse)
}
inline PROTOBUF_NDEBUG_INLINE FastResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::TestTask::Messages::FastResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        current_date_time_(arena, from.current_date_time_) {}

FastResponse::FastResponse(
    ::google::protobuf::Arena* arena,
    const FastResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FastResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:TestTask.Messages.FastResponse)
}
inline PROTOBUF_NDEBUG_INLINE FastResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        current_date_time_(arena) {}

inline void FastResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FastResponse::~FastResponse() {
  // @@protoc_insertion_point(destructor:TestTask.Messages.FastResponse)
  SharedDtor(*this);
}
inline void FastResponse::SharedDtor(MessageLite& self) {
  FastResponse& this_ = static_cast<FastResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.current_date_time_.Destroy();
  this_._impl_.~Impl_();
}

inline void* FastResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FastResponse(arena);
}
constexpr auto FastResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(FastResponse),
                                            alignof(FastResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FastResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FastResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        FastResponse::IsInitializedImpl,
        &FastResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FastResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FastResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FastResponse>(), &FastResponse::ByteSizeLong,
            &FastResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FastResponse, _impl_._cached_size_),
        false,
    },
    &FastResponse::kDescriptorMethods,
    &descriptor_table_mes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FastResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 56, 2> FastResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FastResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TestTask::Messages::FastResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required string current_date_time = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FastResponse, _impl_.current_date_time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string current_date_time = 1;
    {PROTOBUF_FIELD_OFFSET(FastResponse, _impl_.current_date_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\21\0\0\0\0\0\0"
    "TestTask.Messages.FastResponse"
    "current_date_time"
  }},
};

PROTOBUF_NOINLINE void FastResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TestTask.Messages.FastResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.current_date_time_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FastResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FastResponse& this_ = static_cast<const FastResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FastResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FastResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:TestTask.Messages.FastResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required string current_date_time = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_current_date_time();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "TestTask.Messages.FastResponse.current_date_time");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:TestTask.Messages.FastResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FastResponse::ByteSizeLong(const MessageLite& base) {
          const FastResponse& this_ = static_cast<const FastResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FastResponse::ByteSizeLong() const {
          const FastResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:TestTask.Messages.FastResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // required string current_date_time = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_current_date_time());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FastResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FastResponse*>(&to_msg);
  auto& from = static_cast<const FastResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TestTask.Messages.FastResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_current_date_time(from._internal_current_date_time());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FastResponse::CopyFrom(const FastResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TestTask.Messages.FastResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FastResponse::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const FastResponse&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void FastResponse::InternalSwap(FastResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.current_date_time_, &other->_impl_.current_date_time_, arena);
}

::google::protobuf::Metadata FastResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SlowResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SlowResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SlowResponse, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SlowResponse::SlowResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TestTask.Messages.SlowResponse)
}
SlowResponse::SlowResponse(
    ::google::protobuf::Arena* arena, const SlowResponse& from)
    : SlowResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SlowResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SlowResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.connected_client_count_ = {};
}
SlowResponse::~SlowResponse() {
  // @@protoc_insertion_point(destructor:TestTask.Messages.SlowResponse)
  SharedDtor(*this);
}
inline void SlowResponse::SharedDtor(MessageLite& self) {
  SlowResponse& this_ = static_cast<SlowResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SlowResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SlowResponse(arena);
}
constexpr auto SlowResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SlowResponse),
                                            alignof(SlowResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SlowResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SlowResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        SlowResponse::IsInitializedImpl,
        &SlowResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SlowResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SlowResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SlowResponse>(), &SlowResponse::ByteSizeLong,
            &SlowResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SlowResponse, _impl_._cached_size_),
        false,
    },
    &SlowResponse::kDescriptorMethods,
    &descriptor_table_mes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SlowResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SlowResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SlowResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TestTask::Messages::SlowResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required uint32 connected_client_count = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SlowResponse, _impl_.connected_client_count_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SlowResponse, _impl_.connected_client_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required uint32 connected_client_count = 1;
    {PROTOBUF_FIELD_OFFSET(SlowResponse, _impl_.connected_client_count_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SlowResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TestTask.Messages.SlowResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.connected_client_count_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SlowResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SlowResponse& this_ = static_cast<const SlowResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SlowResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SlowResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:TestTask.Messages.SlowResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required uint32 connected_client_count = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_connected_client_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:TestTask.Messages.SlowResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SlowResponse::ByteSizeLong(const MessageLite& base) {
          const SlowResponse& this_ = static_cast<const SlowResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SlowResponse::ByteSizeLong() const {
          const SlowResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:TestTask.Messages.SlowResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // required uint32 connected_client_count = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_connected_client_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SlowResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SlowResponse*>(&to_msg);
  auto& from = static_cast<const SlowResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TestTask.Messages.SlowResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.connected_client_count_ = from._impl_.connected_client_count_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SlowResponse::CopyFrom(const SlowResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TestTask.Messages.SlowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SlowResponse::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const SlowResponse&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void SlowResponse::InternalSwap(SlowResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.connected_client_count_, other->_impl_.connected_client_count_);
}

::google::protobuf::Metadata SlowResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestForFastResponse::_Internal {
 public:
};

RequestForFastResponse::RequestForFastResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:TestTask.Messages.RequestForFastResponse)
}
RequestForFastResponse::RequestForFastResponse(
    ::google::protobuf::Arena* arena,
    const RequestForFastResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RequestForFastResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:TestTask.Messages.RequestForFastResponse)
}

inline void* RequestForFastResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RequestForFastResponse(arena);
}
constexpr auto RequestForFastResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RequestForFastResponse),
                                            alignof(RequestForFastResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RequestForFastResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RequestForFastResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RequestForFastResponse::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<RequestForFastResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RequestForFastResponse::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<RequestForFastResponse>(), &RequestForFastResponse::ByteSizeLong,
            &RequestForFastResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RequestForFastResponse, _impl_._cached_size_),
        false,
    },
    &RequestForFastResponse::kDescriptorMethods,
    &descriptor_table_mes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RequestForFastResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> RequestForFastResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TestTask::Messages::RequestForFastResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata RequestForFastResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestForSlowResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RequestForSlowResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RequestForSlowResponse, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RequestForSlowResponse::RequestForSlowResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TestTask.Messages.RequestForSlowResponse)
}
RequestForSlowResponse::RequestForSlowResponse(
    ::google::protobuf::Arena* arena, const RequestForSlowResponse& from)
    : RequestForSlowResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RequestForSlowResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RequestForSlowResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.time_in_seconds_to_sleep_ = {};
}
RequestForSlowResponse::~RequestForSlowResponse() {
  // @@protoc_insertion_point(destructor:TestTask.Messages.RequestForSlowResponse)
  SharedDtor(*this);
}
inline void RequestForSlowResponse::SharedDtor(MessageLite& self) {
  RequestForSlowResponse& this_ = static_cast<RequestForSlowResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* RequestForSlowResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RequestForSlowResponse(arena);
}
constexpr auto RequestForSlowResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RequestForSlowResponse),
                                            alignof(RequestForSlowResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RequestForSlowResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RequestForSlowResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        RequestForSlowResponse::IsInitializedImpl,
        &RequestForSlowResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RequestForSlowResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RequestForSlowResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RequestForSlowResponse>(), &RequestForSlowResponse::ByteSizeLong,
            &RequestForSlowResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RequestForSlowResponse, _impl_._cached_size_),
        false,
    },
    &RequestForSlowResponse::kDescriptorMethods,
    &descriptor_table_mes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RequestForSlowResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RequestForSlowResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RequestForSlowResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TestTask::Messages::RequestForSlowResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required uint32 time_in_seconds_to_sleep = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestForSlowResponse, _impl_.time_in_seconds_to_sleep_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(RequestForSlowResponse, _impl_.time_in_seconds_to_sleep_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required uint32 time_in_seconds_to_sleep = 1;
    {PROTOBUF_FIELD_OFFSET(RequestForSlowResponse, _impl_.time_in_seconds_to_sleep_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void RequestForSlowResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TestTask.Messages.RequestForSlowResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.time_in_seconds_to_sleep_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RequestForSlowResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RequestForSlowResponse& this_ = static_cast<const RequestForSlowResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RequestForSlowResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RequestForSlowResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:TestTask.Messages.RequestForSlowResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required uint32 time_in_seconds_to_sleep = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_time_in_seconds_to_sleep(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:TestTask.Messages.RequestForSlowResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RequestForSlowResponse::ByteSizeLong(const MessageLite& base) {
          const RequestForSlowResponse& this_ = static_cast<const RequestForSlowResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RequestForSlowResponse::ByteSizeLong() const {
          const RequestForSlowResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:TestTask.Messages.RequestForSlowResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // required uint32 time_in_seconds_to_sleep = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_time_in_seconds_to_sleep());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RequestForSlowResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestForSlowResponse*>(&to_msg);
  auto& from = static_cast<const RequestForSlowResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TestTask.Messages.RequestForSlowResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.time_in_seconds_to_sleep_ = from._impl_.time_in_seconds_to_sleep_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestForSlowResponse::CopyFrom(const RequestForSlowResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TestTask.Messages.RequestForSlowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RequestForSlowResponse::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const RequestForSlowResponse&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void RequestForSlowResponse::InternalSwap(RequestForSlowResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.time_in_seconds_to_sleep_, other->_impl_.time_in_seconds_to_sleep_);
}

::google::protobuf::Metadata RequestForSlowResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Messages
}  // namespace TestTask
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_mes_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
